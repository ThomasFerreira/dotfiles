#!/usr/bin/env python3
# -*- coding: utf-8; -*-

"""
Dummy script that allow me to use and 'merge' external inventories
"""

import argparse
import json
import pathlib

from ansible.parsing.dataloader import DataLoader
from ansible.inventory.manager import InventoryManager


EMPTY_INVENTORY = {"_meta": {"hostvars": {}}}

INVENTORY_GLOB = 'remote.d/inventory_sources/*'
IGNORED_INVENTORY_FILES = {'.gitignore'}

def _parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--list', dest='full', action='store_true')
    parser.add_argument('--host', dest='host', action='store')
    return parser.parse_args()

def _main():
    arguments = _parse_args()

    final_inventory = {}

    if arguments.full:
        script_path = pathlib.Path(__file__)
        script_dir = pathlib.Path(script_path.parent)

        inventory_sources = [x for x in script_dir.glob(INVENTORY_GLOB)
                             if x.is_file() and x.name not in IGNORED_INVENTORY_FILES]

        ansible_inventory = InventoryManager(loader=DataLoader(),
                                             sources=[str(x) for x in inventory_sources])

        final_inventory = {**ansible_inventory.get_groups_dict(), **EMPTY_INVENTORY}

    elif arguments.host:
        final_inventory = {}

    print(json.dumps(final_inventory))

if __name__ == '__main__':
    _main()
